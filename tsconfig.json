{
  "compilerOptions": {
    "rootDir": "./",
    "outDir": "./dist",
    /* Basic Options */
    "target": "es5",
    /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "es2015",
    "lib": [
      "dom",
      "es2016",
      "es2015.promise"
    ],
    /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "declaration": true,
    /* Generates corresponding '.d.ts' file. */
    "sourceMap": true,
    /* Generates corresponding '.map' file. */
    "importHelpers": true,
    /* Import emit helpers from 'tslib'. */
    "strict": true,
    /* Enable all strict type-checking options. */
    "noImplicitThis": true,
    /* Raise error on 'this' expressions with an implied 'any' type. */
    "noUnusedLocals": true,
    /* Report errors on unused locals. */
    "noUnusedParameters": true,
    /* Report errors on unused parameters. */
    "moduleResolution": "node",
    /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "typeRoots": [
      "node_modules/@types",
    ],
    /* List of folders to include type definitions from. */
    "types": [
      // add node as an option
      "node"
    ],
    /* Type declaration files to be included in compilation. */
    "allowSyntheticDefaultImports": true,
    /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,
    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "experimentalDecorators": true
    /* Enables experimental support for ES7 decorators. */
  },
  "include": [
    "src/**/*",
    "node_modules/@types/**/*"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "build"
  ]
}
